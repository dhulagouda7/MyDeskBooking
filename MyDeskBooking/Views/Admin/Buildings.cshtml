@model MyDeskBooking.Models.ViewModels.BuildingManagementViewModel
@{
    ViewBag.Title = "Manage Buildings";
}

<div class="container mt-4">
    <h2>Manage Buildings</h2>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row mt-4">
        <div class="col-md-4">
            <div class="card">
                <div class="card-header">
                    <h4>Add New Building</h4>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("AddBuilding", "Admin", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label class="form-label">Location</label>
                            @Html.DropDownListFor(m => m.Building.LocationId,
                                new SelectList(Model.AvailableLocations, "LocationId", "LocationName"),
                                "Select Location", new { @class = "form-select", required = "required" })
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Building Name</label>
                            @Html.TextBoxFor(m => m.Building.BuildingName, new { @class = "form-control", required = "required", maxlength = "100" })
                        </div>
                        <button type="submit" class="btn btn-primary">Add Building</button>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4>Existing Buildings</h4>
                        <div class="d-flex gap-2">
                            <input type="text" 
                                   id="buildingSearch" 
                                   class="form-control form-control-sm" 
                                   placeholder="Search buildings..."
                                   style="width: 200px;">
                            <select id="locationFilter" class="form-select form-select-sm" style="width: 150px;">
                                <option value="">All Locations</option>
                                @foreach (var location in Model.AvailableLocations)
                                {
                                    <option value="@location.LocationName">@location.LocationName</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped" id="buildingsTable">                            <thead>                                <tr>
                                    <th style="width: 20%" class="text-nowrap">Building Name</th>
                                    <th style="width: 20%" class="text-nowrap">Location</th>
                                    <th style="width: 10%">Total Floors</th>
                                    <th style="width: 10%">Total Desks</th>
                                    <th style="width: 40%">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var building in Model.Buildings)
                                {                                    <tr>
                                        <td class="text-nowrap">@building.BuildingName</td>
                                        <td class="text-nowrap">@building.Location.LocationName</td>
                                        <td>@(building.Floors?.Count ?? 0)</td>
                                        <td>@(building.Floors?.Sum(f => f.Desks?.Count ?? 0) ?? 0)</td>
                                        <td>
                                            <div class="d-flex gap-2">
                                                <button class="btn btn-sm btn-primary" onclick="editBuilding(@building.BuildingId)">Edit</button>
                                                <a href="@Url.Action("Floors", new { buildingId = building.BuildingId })" class="btn btn-sm btn-info">Manage Floors</a>
                                                @using (Html.BeginForm("DeleteBuilding", "Admin", FormMethod.Post, new { style = "display: inline;" }))
                                                {
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="buildingId" value="@building.BuildingId" />
                                                    <button type="submit" class="btn btn-sm btn-danger"
                                                            onclick="return confirm('Are you sure you want to delete this building? This will also delete all associated floors and desks.')">
                                                        Delete
                                                    </button>
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="d-flex justify-content-between align-items-center mt-3">
                            <div class="dataTables_info" id="paginationInfo">
                                Showing <span id="startIndex">1</span> to <span id="endIndex">10</span> of <span id="totalItems">0</span> buildings
                            </div>
                            <div class="dataTables_paginate">
                                <ul class="pagination mb-0">
                                    <li class="page-item" id="previousPage">
                                        <a class="page-link" href="#" tabindex="-1">Previous</a>
                                    </li>
                                    <li class="page-item" id="nextPage">
                                        <a class="page-link" href="#">Next</a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Building Modal -->
<div class="modal fade" id="editBuildingModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Building</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editBuildingForm" method="post">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="editBuildingId" name="BuildingId" />
                    <div class="mb-3">
                        <label class="form-label">Location</label>
                        <select id="editLocationId" name="LocationId" class="form-select" required>
                            @foreach (var location in Model.AvailableLocations)
                            {
                                <option value="@location.LocationId">@location.LocationName</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Building Name</label>
                        <input type="text" id="editBuildingName" name="BuildingName" class="form-control" required maxlength="100" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Auto-close alerts after 5 seconds
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 5000);

            // Filter functionality
            function filterBuildings() {
                var searchText = $("#buildingSearch").val().toLowerCase();
                var locationFilter = $("#locationFilter").val().toLowerCase();
                var $rows = $("#buildingsTable tbody tr");
                var visibleCount = 0;

                $rows.each(function() {
                    var $row = $(this);
                    var buildingName = $row.find("td:eq(0)").text().toLowerCase();
                    var locationName = $row.find("td:eq(1)").text().toLowerCase();
                    
                    var matchesSearch = buildingName.includes(searchText);
                    var matchesLocation = !locationFilter || locationName === locationFilter;
                    
                    if (matchesSearch && matchesLocation) {
                        $row.show();
                        visibleCount++;
                    } else {
                        $row.hide();
                    }
                });

                // Update pagination info
                if (visibleCount === 0) {
                    $("#startIndex").text("0");
                    $("#endIndex").text("0");
                } else {
                    $("#startIndex").text("1");
                    $("#endIndex").text(visibleCount);
                }
                $("#totalItems").text(visibleCount);
                
                // Update pagination buttons state
                $("#previousPage, #nextPage").toggleClass("disabled", true);
            }

            // Bind filter events
            $("#buildingSearch").on("keyup", filterBuildings);
            $("#locationFilter").on("change", filterBuildings);

            // Pagination variables
            var currentPage = 1;
            var rowsPerPage = 10;
            var $tableBody = $("#buildingsTable tbody");
            var $allRows = $tableBody.find("tr");
            var totalRows = $allRows.length;

            // Update pagination info initially
            $("#totalItems").text(totalRows);
            
            function updatePagination() {
                var totalPages = Math.ceil(totalRows / rowsPerPage);
                var startIndex = (currentPage - 1) * rowsPerPage + 1;
                var endIndex = Math.min(startIndex + rowsPerPage - 1, totalRows);

                // Update info text
                $("#startIndex").text(totalRows === 0 ? 0 : startIndex);
                $("#endIndex").text(endIndex);
                $("#totalItems").text(totalRows);

                // Show/hide rows for current page
                $allRows.hide();
                $allRows.slice(startIndex - 1, endIndex).show();

                // Update pagination buttons
                $("#previousPage").toggleClass("disabled", currentPage === 1);
                $("#nextPage").toggleClass("disabled", currentPage >= totalPages);
            }

            // Handle pagination clicks
            $("#previousPage").click(function(e) {
                e.preventDefault();
                if (currentPage > 1) {
                    currentPage--;
                    updatePagination();
                }
            });

            $("#nextPage").click(function(e) {
                e.preventDefault();
                var totalPages = Math.ceil(totalRows / rowsPerPage);
                if (currentPage < totalPages) {
                    currentPage++;
                    updatePagination();
                }
            });

            // Initial pagination setup
            updatePagination();
        });

        function editBuilding(buildingId) {
            $.get('@Url.Action("GetBuilding", "Admin")/' + buildingId, function(data) {
                $('#editBuildingId').val(data.buildingId);
                $('#editLocationId').val(data.locationId);
                $('#editBuildingName').val(data.buildingName);
                $('#editBuildingForm').attr('action', '@Url.Action("EditBuilding", "Admin")');
                $('#editBuildingModal').modal('show');
            });
        }
    </script>
}
