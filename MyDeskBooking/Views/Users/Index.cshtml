@model IEnumerable<MyDeskBooking.Models.EntityModels.User>

@{
    ViewBag.Title = "User Management";
}

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>User Management</h2>
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="fas fa-user-plus"></i> Create New User
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.Username)</th>
                            <th>@Html.DisplayNameFor(model => model.Email)</th>
                            <th>Role</th>
                            <th>Team</th>
                            <th>Status</th>
                            <th>Last Login</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Username)</td>
                                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                                <td><span class="badge @(item.RoleId == 1 ? "bg-primary" : "bg-info")">
                                    @(item.RoleId == 1 ? "Admin" : "User")
                                </span></td>
                                <td>@Html.DisplayFor(modelItem => item.TeamId)</td>
                                <td>
                                    <span class="badge @(item.IsActive ? "bg-success" : "bg-danger")">
                                        @(item.IsActive ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td>@(item.LastLoginDate?.ToString("MM/dd/yyyy HH:mm") ?? "Never")</td>
                                <td>                                    <div class="d-flex gap-2">
                                        <a href="@Url.Action("Edit", new { id = item.UserId })" class="btn btn-sm btn-outline-primary" title="Edit">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        <a href="@Url.Action("Delete", new { id = item.UserId })" class="btn btn-sm btn-outline-danger" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Auto-close alerts after 5 seconds
            window.setTimeout(function () {
                $(".alert").fadeTo(500, 0).slideUp(500, function () {
                    $(this).remove();
                });
            }, 5000);
        });
    </script>
}